(self.webpackChunkplataform=self.webpackChunkplataform||[]).push([[5425,7806],{7806:(C,o,l)=>{l.r(o),l.d(o,{NzOutletModule:()=>m,NzStringTemplateOutletDirective:()=>p});var r=l(2950),a=l(1315);let p=(()=>{class t{viewContainer;templateRef;embeddedViewRef=null;context=new f;nzStringTemplateOutletContext=null;nzStringTemplateOutlet=null;static ngTemplateContextGuard(n,e){return!0}recreateView(){this.viewContainer.clear(),this.embeddedViewRef=(0,a.isTemplateRef)(this.nzStringTemplateOutlet)?this.viewContainer.createEmbeddedView(this.nzStringTemplateOutlet,this.nzStringTemplateOutletContext):this.viewContainer.createEmbeddedView(this.templateRef,this.context)}updateContext(){const n=(0,a.isTemplateRef)(this.nzStringTemplateOutlet)?this.nzStringTemplateOutletContext:this.context,e=this.embeddedViewRef.context;if(n)for(const i of Object.keys(n))e[i]=n[i]}constructor(n,e){this.viewContainer=n,this.templateRef=e}ngOnChanges(n){const{nzStringTemplateOutletContext:e,nzStringTemplateOutlet:i}=n;i&&(this.context.$implicit=i.currentValue),(()=>{let s=!1;return i&&(s=i.firstChange||(0,a.isTemplateRef)(i.previousValue)||(0,a.isTemplateRef)(i.currentValue)),e&&(u=>{const c=Object.keys(u.previousValue||{}),d=Object.keys(u.currentValue||{});if(c.length===d.length){for(const g of d)if(-1===c.indexOf(g))return!0;return!1}return!0})(e)||s})()?this.recreateView():this.updateContext()}static \u0275fac=function(e){return new(e||t)(r.\u0275\u0275directiveInject(r.ViewContainerRef),r.\u0275\u0275directiveInject(r.TemplateRef))};static \u0275dir=r.\u0275\u0275defineDirective({type:t,selectors:[["","nzStringTemplateOutlet",""]],inputs:{nzStringTemplateOutletContext:"nzStringTemplateOutletContext",nzStringTemplateOutlet:"nzStringTemplateOutlet"},exportAs:["nzStringTemplateOutlet"],features:[r.\u0275\u0275NgOnChangesFeature]})}return t})();class f{$implicit}let m=(()=>{class t{static \u0275fac=function(e){return new(e||t)};static \u0275mod=r.\u0275\u0275defineNgModule({type:t});static \u0275inj=r.\u0275\u0275defineInjector({})}return t})()}}]);